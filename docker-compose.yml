version: '3.8'

services:
  # Redis
  redis-cache:
    image: redis:latest
    restart: on-failure
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data
    networks:
      - laravel-net
  # Laravel Application
  laravel:
    build:
      context: ./laravel
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: on-failure
    volumes:
      - ./laravel:/var/www/html
    ports:
      - "8080:80"
    environment:
      - APACHE_DOCUMENT_ROOT=/var/www/html/public
    depends_on:
      - mysql
    networks:
      - laravel-net

  # MySQL Database
  mysql:
    image: mysql:8
    container_name: laravel-mysql
    restart: on-failure
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: YQA1dwq3pum.qyw5qrf
      MYSQL_DATABASE: map_app
      MYSQL_USER: laravel
      MYSQL_PASSWORD: YQA1dwq3pum.qyw5qrf
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - laravel-net

  typesense:
    image: typesense/typesense:27.0.rc4
    restart: on-failure
    ports:
      - "8108:8108"
    volumes:
      - ./typesense-data:/data
    command: '--data-dir /data --api-key=af08c803-90e4-418d-8736-9211204af5e2 --enable-cors'
    networks:
      - laravel-net

networks:
  laravel-net:

volumes:
  cache:
    driver: local
